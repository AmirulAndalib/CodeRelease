sensorControlActivation = {
  activateParalellFeetController = true;
  activateJointErrorPID = true;
  activateAnkleHipPID = true;
  activateCoMShifting = false;
  activateStepDurationAdjustment = true;
  activateSpeedReduction = true;
  activatePreviewController = true;
  activateSafetySteps = false;
  activateFLIPMObserverGains = false;
  activateCalibrationScaling = true;
};
paralellFeetController = {
  controller = {
    P = 1;
    D = 0;
  };
  polygon = [
    0.5,
    1,
    1,
    0,
    0
  ];
  anglesource = imuModel;
};
jointErrorPID = {
  pid = {
    P = 0.15;
    I = 0;
    D = 0.05;
  };
};
ankleHipPID = {
  targetAngle = {
    x = 0deg;
    y = 0deg;
  };
  ankleParams = {
    pidMultiplicatorsX = {
      zero = 0.35;
      normal = 0.35;
    };
    x = {
      P = 0.5;
      I = 0;
      D = 2.75;
    };
    pidMultiplicatorsY = {
      zero = 0.85;
      normal = 1.75;
    };
    y = {
      P = -0.1;
      I = 0;
      D = -2.75;
    };
  };
  hipParams = {
    pidMultiplicatorsX = {
      zero = 0.35;
      normal = 0.35;
    };
    x = {
      P = -0.5;
      I = 0;
      D = -2.75;
    };
    pidMultiplicatorsY = {
      zero = 0.85;
      normal = 1.75;
    };
    y = {
      P = -0.1;
      I = 0;
      D = -2.75;
    };
  };
  ankleHipRatio = {
    x = 0.7;
    y = 0.7;
  };
  balanceSupportLegOnly = false;
  anglesource = imuModel;
};
coMShifting = {
  accXAlpha = -0.5;
  stepAccAlpha = 0;
  accInterpolTime = 200;
  anglesource = imuModel;
};
stepDurationAdjustment = {
  stepDuration = {
    min = 0.5;
    max = 0.6;
  };
  exponentialFactor = 0.999;
};
speedReduction = {
  angleY = {
    min = -1.6deg;
    max = 3.4deg;
  };
  angleX = {
    min = -1.6deg;
    max = 1.6deg;
  };
  speedReductionFactor = 1.05;
  speedReductionExponentialBasis = 1.22;
  emergencyStopSpeedReductionFactorThreshold = 4;
  emergencyStopGyroVariance = 1.25;
  stepSpeedInfluenceFactor = {
    x = 0.35;
    y = 0.15;
  };
  customStepFactorStable = 3;
  anglesource = imuModel;
};
previewController = {
  freezeDSRefZMPUntilFSR = true;
  slowDSRefZMPUntilFSR = false;
  maxFramesForDSExtension = 15;
};
flipmObserverGains = {
  activateSensorX = false;
  sensorXFactor = 0.5;
  sensorControlRatioObserverX = [
    0,
    0.0001,
    0.3
  ];
  activateSensorY = false;
  sensorYFactor = 2;
  sensorControlRatioObserverY = [
    0,
    0.00012,
    0.3
  ];
  maxDiffCoMClip = 0.09;
  maxDiffACCClip = 3.5;
  CoM1Provider = MRECoM;
  ACC1Provider = ZMPAcc;
  CoM2Provider = IMUCoM;
  CoM1Delay = 2;
  CoM1OffsetX = 0;
  CoM1OffsetY = 0;
  CoM2Delay = 0;
  CoM2OffsetX = 0;
  CoM2OffsetY = 0;
  CoM2DiffXOffset = 0;
  CoM2DiffYOffset = 0;
  accFilter = 0.8;
  useRCS = false;
};
safetySteps = {
  angleSumForSafetyStepFront = 500;
  angleSumForSafetyStepBack = 150;
  angleSumDecay = 2;
  comErrorFrontForSafetySteps = 10;
  comErrorBackForSafetySteps = -5;
  maxSafetyStepCorrection = {
    x = 30;
    y = 20;
  };
  anglesource = imuModel;
};
